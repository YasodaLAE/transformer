spring.application.name=oversight

# MySQL Database Configuration
# The URL points to a local MySQL server and specific database ('oversightdb').
# The 'createDatabaseIfNotExist=true' is good.

spring.datasource.url=jdbc:mysql://localhost:3306/oversightdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=6?aY7@eR

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.sql.init.mode=always

# JPA/Hibernate Configuration
# tells Hibernate to automatically update the database schema based on the entities.
# 'update' is safe for development; it adds new tables/columns but doesn't delete existing ones.
spring.jpa.hibernate.ddl-auto=update


#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Specify the MySQL dialect for Hibernate to generate optimized SQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Show SQL statements in the console for debugging purposes.
spring.jpa.show-sql=true

# File Storage Configuration
# Defines the root directory for storing uploaded thermal images.
#file.upload-dir=./uploads

# Set max file size for uploads to 10MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

storage.root-location=./uploads
#storage.root-location=D:/oversight/server/annotated

# The location where the original image files are stored (D:\oversight\uploads)
ml.image.upload-dir=./uploads

# The location to temporarily generate the YOLO dataset (D:\oversight\server\src\main\resources\dataset)
ml.dataset-dir=./server/src/main/resources/dataset

# The location to store the new fine-tuned model (D:\oversight\server\src\main\resources\ml_models)
ml.model-output-dir=./server/src/main/resources/ml_models

# The path to your Python training script (we will create this in step 2)
ml.training-script-path=./server/src/main/resources/scripts/finetune_yolo.py